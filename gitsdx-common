escape() {
  echo "$1" | sed 's/\([\.\$\*]\)/\\\1/g'
}

has() {
  local item=$1; shift
  echo " $@ " | grep -q " $(escape $item) "
}

isMerged() {
  local subject=$1
  local base=$2
  local all_merges="$(git branch --no-color --contains $subject | sed 's/^[* ] //')"
  has $base $all_merges
}

remoteBranches() { git branch -r --no-color | sed 's/^[* ] //'; }
localBranches() { git branch --no-color | sed 's/^[* ] //'; }

existsRemote(){
  has "origin/$1" $(remoteBranches)
}

existsLocal(){
  has "$1" $(localBranches)
}

subcommand=${1}
current_branch=`git symbolic-ref HEAD 2>/dev/null | sed -e "s/refs\/heads\///"`
btype=`echo ${current_branch} | cut -d'/' -f1`
