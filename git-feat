#!/bin/sh

export DIR=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")

. "$DIR/gitsdx-common"

usage() {
  echo "usage: git feat add <feat name>"
  echo "       git feat done"
  echo ""
  echo "Available subcommands are:"
  echo "   add     Create feat branch."
  echo "   done    Merge feat branch to project branch and clean remote branch"
}

clean(){
  git branch -d ${current_branch}

  if existsRemote "${current_branch}"; then
    git push origin :${current_branch}
  fi
}

if [ -z ${subcommand} ]; then
  usage
  exit 1
fi

feat_name=${2}

if [ ${btype} = "proj" -o ${btype} = "feat" ]; then
  proj_name=`echo ${current_branch} | cut -d'/' -f2`
else
  proj_name=${current_branch}
fi

if [ ${proj_name} = "master" ]; then
  parent_branch="master"
else
  parent_branch="proj/"${proj_name}
fi

if [ ${subcommand} = "add" ]; then

  if [ -z ${feat_name} ]; then
    usage
    exit 1
  fi  
  git checkout -b feat/${proj_name}/${feat_name}

elif [ ${subcommand} = "done" ]; then

  if [ ${btype} != "feat" ]; then
    echo 'This branch is not feat branch.'
    exit 1
  fi

  git checkout ${parent_branch}
  #check already merged
  if isMerged "${current_branch}" "${parent_branch}"; then
    clean
  fi

  git merge --no-ff ${current_branch}

  #check merged again
  if isMerged "${current_branch}" "${parent_branch}"; then
    clean
  fi

else
  usage
fi
